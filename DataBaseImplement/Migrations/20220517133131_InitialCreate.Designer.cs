// <auto-generated />
using System;
using DataBaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBaseImplement.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20220517133131_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBaseImplement.Models.GSM", b =>
                {
                    b.Property<int>("GSMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GSMName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GSMId");

                    b.ToTable("GSMs");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Price", b =>
                {
                    b.Property<int>("GSMId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("PriceForL")
                        .HasColumnType("float");

                    b.HasKey("GSMId", "PriceDate");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Sell", b =>
                {
                    b.Property<int>("SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GSMId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SellDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SellValue")
                        .HasColumnType("float");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("SellId");

                    b.HasIndex("GSMId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Smena", b =>
                {
                    b.Property<DateTime>("SmenaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SmenaNumber")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("SmenaDate", "SmenaNumber", "WorkerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Smenas");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("DataBaseImplement.Models.WorkerGSM", b =>
                {
                    b.Property<int>("GSMId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("GSMId", "WorkerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerGSMs");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Price", b =>
                {
                    b.HasOne("DataBaseImplement.Models.GSM", "GSM")
                        .WithMany("Prices")
                        .HasForeignKey("GSMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GSM");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Sell", b =>
                {
                    b.HasOne("DataBaseImplement.Models.GSM", "GSM")
                        .WithMany("Sells")
                        .HasForeignKey("GSMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseImplement.Models.Worker", "Worker")
                        .WithMany("Sells")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GSM");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Smena", b =>
                {
                    b.HasOne("DataBaseImplement.Models.Worker", "Worker")
                        .WithMany("Smenas")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DataBaseImplement.Models.WorkerGSM", b =>
                {
                    b.HasOne("DataBaseImplement.Models.GSM", "GSM")
                        .WithMany("WorkerGSMs")
                        .HasForeignKey("GSMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseImplement.Models.Worker", "Worker")
                        .WithMany("WorkerGSMs")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GSM");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DataBaseImplement.Models.GSM", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Sells");

                    b.Navigation("WorkerGSMs");
                });

            modelBuilder.Entity("DataBaseImplement.Models.Worker", b =>
                {
                    b.Navigation("Sells");

                    b.Navigation("Smenas");

                    b.Navigation("WorkerGSMs");
                });
#pragma warning restore 612, 618
        }
    }
}
